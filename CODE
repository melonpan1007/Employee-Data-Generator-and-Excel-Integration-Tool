#include <iostream>
#include <fstream>
#include <vector>
#include <random>
#include <string>

// Function to generate random names
std::string generateRandomName() {
    // Lists of common first and last names
    std::vector<std::string> firstNames = {"John", "Jane", "Michael", "Emily", "David", "Sarah", "Daniel", "Jessica", "James", "Olivia"};
    std::vector<std::string> lastNames = {"Smith", "Johnson", "Williams", "Brown", "Jones", "Garcia", "Miller", "Davis", "Rodriguez", "Martinez"};

    // Randomly select first and last names
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> firstNameDist(0, firstNames.size() - 1);
    std::uniform_int_distribution<> lastNameDist(0, lastNames.size() - 1);
    
    std::string firstName = firstNames[firstNameDist(gen)];
    std::string lastName = lastNames[lastNameDist(gen)];

    return firstName + " " + lastName;
}

// Function to generate branch names in the format "Delhi_01", "Delhi_02", etc.
std::string generateBranchName(int index) {
    return "Delhi_" + std::to_string(index);
}

// Function to generate random employee data
std::vector<std::vector<std::string>> generateEmployeeData(int numEmployees) {
    std::vector<std::vector<std::string>> employeeData;
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> salesDist(2000, 4000);

    for (int i = 1; i <= numEmployees; ++i) {
        std::vector<std::string> employee;
        employee.push_back(std::to_string(i)); // Employee ID
        employee.push_back(generateRandomName()); // Employee Name
        employee.push_back(generateBranchName(i)); // Branch Name

        // Sales targets for 7 months
        for (int j = 0; j < 7; ++j) {
            employee.push_back(std::to_string(salesDist(gen)));
        }
        
        employeeData.push_back(employee);
    }

    return employeeData;
}

// Function to save data to CSV file
void saveToCSV(const std::vector<std::vector<std::string>>& data, const std::string& filename) {
    std::ofstream file(filename);
    if (!file.is_open()) {
        std::cerr << "Error: Unable to open file for writing!" << std::endl;
        return;
    }

    // Write headers
    file << "Employee ID,Employee Name,Branch Name,Month 1,Month 2,Month 3,Month 4,Month 5,Month 6,Month 7\n";

    // Write data
    for (const auto& employee : data) {
        for (size_t i = 0; i < employee.size(); ++i) {
            file << employee[i];
            if (i != employee.size() - 1) {
                file << ",";
            }
        }
        file << "\n";
    }

    file.close();
}

int main() {
    int numEmployees = 1000;
    std::vector<std::vector<std::string>> employeeData = generateEmployeeData(numEmployees);
    saveToCSV(employeeData, "employee_data.csv");
    std::cout << "Data generated and saved to employee_data.csv" << std::endl;
    return 0;
} 
